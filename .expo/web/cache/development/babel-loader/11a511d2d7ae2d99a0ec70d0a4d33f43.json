{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/marina/Application/Blockchain-Certificates-Authentication/screens/HomeScreen.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as WebBrowser from 'expo-web-browser';\nimport { Card, SearchBar } from 'react-native-elements';\nimport useAsyncEffect from 'use-async-effect';\nimport useForceUpdate from 'use-force-update';\nimport { WALLET_ID } from \"../constants\";\nconsole.disableYellowBox = true;\nvar connectionDataArray = [];\nvar details2 = [];\nvar details = [];\nvar detailsOfVer = [];\nvar detailsOfVer2 = [];\nexport default function HomeScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var walletID = WALLET_ID;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      credentials = _React$useState2[0],\n      setCredentials = _React$useState2[1];\n\n  var _React$useState3 = React.useState([]),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Verifications = _React$useState4[0],\n      setVerification = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      offeredCredentials = _React$useState6[0],\n      setOfferedCredentials = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      requestedVerifications = _React$useState8[0],\n      setrequestedVerifications = _React$useState8[1];\n\n  var _React$useState9 = React.useState([]),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      VerificationDetailsArray = _React$useState10[0],\n      setVerificationDetailsArray = _React$useState10[1];\n\n  var _React$useState11 = React.useState(0),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      VerificationDetailsArraySize = _React$useState12[0],\n      setVerificationDetailsArraySize = _React$useState12[1];\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      arraySize2 = _React$useState14[0],\n      setArraySize2 = _React$useState14[1];\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      arraySizeVer = _React$useState16[0],\n      setArraySizeVer = _React$useState16[1];\n\n  var _React$useState17 = React.useState([]),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      connectionDetailsArray = _React$useState18[0],\n      setConnectionDetailsArray = _React$useState18[1];\n\n  var _React$useState19 = React.useState(0),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      connectionDetailsArraySize = _React$useState20[0],\n      setConnectionDetailsArraySize = _React$useState20[1];\n\n  var _React$useState21 = React.useState(false),\n      _React$useState22 = _slicedToArray(_React$useState21, 2),\n      count = _React$useState22[0],\n      setCount = _React$useState22[1];\n\n  var _React$useState23 = React.useState(0),\n      _React$useState24 = _slicedToArray(_React$useState23, 2),\n      offeredCredentialsArraySize = _React$useState24[0],\n      setOfferedCredentialsArraySize = _React$useState24[1];\n\n  var _React$useState25 = React.useState(0),\n      _React$useState26 = _slicedToArray(_React$useState25, 2),\n      RequestedVerificationsArraySize = _React$useState26[0],\n      setRequestedVerificationsArraySize = _React$useState26[1];\n\n  useInterval(function () {\n    try {\n      var fetchAllCredentials = function fetchAllCredentials() {\n        var data, dataVer;\n        return _regeneratorRuntime.async(function fetchAllCredentials$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _regeneratorRuntime.awrap(fetchCredentials());\n\n              case 2:\n                data = _context.sent;\n                setCredentials(data);\n                _context.next = 6;\n                return _regeneratorRuntime.awrap(fetchVerifications());\n\n              case 6:\n                dataVer = _context.sent;\n                setVerification(dataVer);\n                setArraySizeVer(dataVer.length);\n                setArraySize2(data.length);\n                _context.next = 12;\n                return _regeneratorRuntime.awrap(fetchOfferedCredentials(data));\n\n              case 12:\n                details = _context.sent;\n                _context.next = 15;\n                return _regeneratorRuntime.awrap(fetchRequestedVerifications(dataVer));\n\n              case 15:\n                detailsOfVer = _context.sent;\n                setConnectionDetailsArray(details);\n                setVerificationDetailsArray(detailsOfVer);\n                setConnectionDetailsArraySize(Object.keys(details).length);\n                setVerificationDetailsArraySize(Object.keys(detailsOfVer).length);\n\n              case 20:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n\n      fetchAllCredentials();\n      fillConnectionDataArray();\n      removeIssuedCredential();\n      removeRequestedVerification();\n    } catch (error) {}\n  }, 8000);\n\n  function useInterval(callback, delay) {\n    var savedCallback = React.useRef();\n    React.useEffect(function () {\n      savedCallback.current = callback;\n      var isFocused = navigation.isFocused();\n    }, [callback]);\n    React.useEffect(function () {\n      function tick() {\n        savedCallback.current();\n      }\n\n      if (delay !== null) {\n        var id = setInterval(tick, delay);\n        return function () {\n          return clearInterval(id);\n        };\n      }\n    }, [delay]);\n  }\n\n  function ItemC(_ref2) {\n    var title = _ref2.title,\n        url = _ref2.url,\n        credentialId = _ref2.credentialId;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('OfferDetails', {\n          img: url,\n          name: title,\n          credentialId: credentialId\n        });\n      },\n      style: [styles.item, {\n        backgroundColor: '#ffffff'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      }\n    }, React.createElement(Card, {\n      title: \"Credential Offer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      }\n    }, React.createElement(View, {\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      }\n    }, title)), React.createElement(Text, {\n      style: styles.paragraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      }\n    }, \"You have a new credential offer\")));\n  }\n\n  function ItemV(_ref3) {\n    var title = _ref3.title,\n        url = _ref3.url,\n        verificationId = _ref3.verificationId;\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('VerificationRequestDetails', {\n          img: url,\n          name: title,\n          verificationId: verificationId\n        });\n      },\n      style: [styles.item, {\n        backgroundColor: '#ffffff'\n      }],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      }\n    }, React.createElement(Card, {\n      title: \"Verification Request\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      }\n    }, React.createElement(View, {\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      }\n    }, title)), React.createElement(Text, {\n      style: styles.paragraph,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      }\n    }, \"You are required to verify this information\")));\n  }\n\n  function addConnectionDetails(arr, myID, object) {\n    var found = arr.some(function (el) {\n      return el.id == myID;\n    });\n\n    if (!found) {\n      arr.push(object);\n    }\n\n    return arr;\n  }\n\n  function fetchCredentials() {\n    var res, cred;\n    return _regeneratorRuntime.async(function fetchCredentials$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials', {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            cred = _context2.sent;\n            return _context2.abrupt(\"return\", cred);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function fetchOfferedCredentials(data) {\n    var index, tempConnectionID, res, connection;\n    return _regeneratorRuntime.async(function fetchOfferedCredentials$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            currArraySize2 = arraySize2;\n            index = 0;\n\n          case 2:\n            if (!(index < data.length)) {\n              _context3.next = 17;\n              break;\n            }\n\n            if (!(data[index].state == \"Offered\")) {\n              _context3.next = 14;\n              break;\n            }\n\n            setOfferedCredentials(addConnectionDetails(offeredCredentials, data[index].credentialId, data[index]));\n            tempConnectionID = data[index].connectionId;\n            _context3.next = 8;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/connections/' + tempConnectionID, {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 8:\n            res = _context3.sent;\n            _context3.next = 11;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 11:\n            connection = _context3.sent;\n            details2 = addConnectionDetails(details, connection.connectionId, connection);\n            setOfferedCredentialsArraySize(offeredCredentials.length);\n\n          case 14:\n            index++;\n            _context3.next = 2;\n            break;\n\n          case 17:\n            return _context3.abrupt(\"return\", details2);\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function fillConnectionDataArray() {\n    try {\n      if (VerificationDetailsArraySize > 0) {\n        for (var index = 0; index < requestedVerifications.length; index++) {\n          for (var _index = 0; _index < VerificationDetailsArray.length; _index++) {\n            if (VerificationDetailsArray[_index].connectionId === requestedVerifications[index].connectionId) {\n              var objj = {\n                id: VerificationDetailsArray[_index].connectionId,\n                verificationId: requestedVerifications[index].verificationId,\n                title: VerificationDetailsArray[_index].name,\n                image: VerificationDetailsArray[_index].imageUrl,\n                type: 'Verification'\n              };\n              connectionDataArray = addConnectionDetails(connectionDataArray, objj.id, objj);\n            }\n          }\n\n          if (connectionDetailsArraySize > 0) {\n            for (var _index2 = 0; _index2 < offeredCredentials.length; _index2++) {\n              for (var _index3 = 0; _index3 < connectionDetailsArray.length; _index3++) {\n                if (connectionDetailsArray[_index3].connectionId === offeredCredentials[_index2].connectionId) {\n                  var obj = {\n                    id: connectionDetailsArray[_index3].connectionId,\n                    credentialId: offeredCredentials[_index2].credentialId,\n                    title: connectionDetailsArray[_index3].name,\n                    image: connectionDetailsArray[_index3].imageUrl,\n                    type: 'Credential'\n                  };\n                  connectionDataArray = addConnectionDetails(connectionDataArray, obj.id, obj);\n                }\n              }\n            }\n          }\n        }\n\n        console.log(connectionDataArray);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  function fetchVerifications() {\n    var res, ver;\n    return _regeneratorRuntime.async(function fetchVerifications$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/verifications', {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 2:\n            res = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 5:\n            ver = _context4.sent;\n            return _context4.abrupt(\"return\", ver);\n\n          case 7:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function fetchRequestedVerifications(dataVer) {\n    var index, tempVerConnectionID, res, ver;\n    return _regeneratorRuntime.async(function fetchRequestedVerifications$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            currArraySizeVer = arraySizeVer;\n            index = 0;\n\n          case 2:\n            if (!(index < dataVer.length)) {\n              _context5.next = 18;\n              break;\n            }\n\n            if (!(dataVer[index].state == \"Requested\")) {\n              _context5.next = 15;\n              break;\n            }\n\n            setrequestedVerifications(addConnectionDetails(requestedVerifications, dataVer[index].verificationId, dataVer[index]));\n            tempVerConnectionID = dataVer[index].connectionId;\n            _context5.next = 8;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/connections/' + tempVerConnectionID, {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 8:\n            res = _context5.sent;\n            _context5.next = 11;\n            return _regeneratorRuntime.awrap(res.json());\n\n          case 11:\n            ver = _context5.sent;\n            detailsOfVer2 = addConnectionDetails(detailsOfVer, ver.connectionId, ver);\n            setOfferedCredentialsArraySize(offeredCredentials.length);\n            setRequestedVerificationsArraySize(requestedVerifications.length);\n\n          case 15:\n            index++;\n            _context5.next = 2;\n            break;\n\n          case 18:\n            return _context5.abrupt(\"return\", detailsOfVer2);\n\n          case 19:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function removeIssuedCredential() {\n    var temArray = [];\n    setOfferedCredentials(temArray);\n\n    for (var index = 0; index < arraySize2; index++) {\n      if (credentials[index].state == \"Issued\") {\n        for (var _index4 = 0; _index4 < connectionDataArray.length; _index4++) {\n          if (connectionDataArray[_index4].credentialId == credentials[index].credentialId) {\n            connectionDataArray.splice(_index4, 1);\n            setOfferedCredentialsArraySize(offeredCredentials.length);\n          }\n        }\n      }\n    }\n\n    if (connectionDataArray.length > 0) {\n      setCount(true);\n    } else setCount(false);\n  }\n\n  function removeRequestedVerification() {\n    var tempArray = [];\n    setrequestedVerifications(tempArray);\n\n    for (var index = 0; index < arraySizeVer; index++) {\n      if (credentials[index].state == \"Accepted\") {\n        for (var index3 = 0; index3 < connectionDataArray.length; index3++) {\n          if (connectionDataArray[index3].verificationId == Verifications[index].verificationId) {\n            connectionDataArray.splice(index2, 1);\n            setrequestedVerifications(requestedVerifications.length);\n          }\n        }\n      }\n    }\n\n    if (connectionDataArray.length > 0) {\n      setCount(true);\n    } else setCount(false);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307\n    }\n  }, count ? React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310\n    }\n  }, React.createElement(FlatList, {\n    data: connectionDataArray,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref4) {\n      var item = _ref4.item;\n\n      if (item.type == \"Credential\") {\n        return React.createElement(ItemC, {\n          title: item.title,\n          url: item.image,\n          credentialId: item.credentialId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          }\n        });\n      } else if (item.type == \"Verification\") {\n        return React.createElement(ItemV, {\n          title: item.title,\n          url: item.image,\n          verificationId: item.verificationId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          }\n        });\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    }\n  })) : React.createElement(View, {\n    style: styles.welcomeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329\n    }\n  }, React.createElement(Image, {\n    source: __DEV__ ? require(\"../assets/images/barcode.png\") : require(\"../assets/images/robot-prod.png\"),\n    style: styles.welcomeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    }\n  })), React.createElement(View, {\n    style: styles.tabBarInfoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    }\n  }, React.createElement(Button, {\n    title: \"SCAN CODE\",\n    type: \"outline\",\n    onPress: function onPress() {\n      return navigation.navigate('QRScanner');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341\n    }\n  })));\n}\nHomeScreen.navigationOptions = {\n  header: null\n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    var learnMoreButton = React.createElement(Text, {\n      onPress: handleLearnMorePress,\n      style: styles.helpLinkText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      }\n    }, \"Learn more\");\n    return React.createElement(Text, {\n      style: styles.developmentModeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      }\n    }, \"Development mode is enabled: your app will be slower but you can use useful development tools. \", learnMoreButton);\n  } else {\n    return React.createElement(Text, {\n      style: styles.developmentModeText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      }\n    }, \"You are not in development mode: your app will run at full speed.\");\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change');\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  bottom: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 36\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center'\n  },\n  contentContainer: {\n    paddingTop: 30\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 150,\n    height: 180,\n    resizeMode: 'contain',\n    marginTop: 100,\n    marginLeft: -10\n  },\n  linearGradient: {\n    flexDirection: 'row',\n    marginTop: 230,\n    borderRadius: 5\n  },\n  buttonText: {\n    fontSize: 24,\n    fontFamily: 'Gill Sans',\n    textAlign: 'center',\n    margin: 10,\n    color: '#ffffff',\n    backgroundColor: 'transparent'\n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50\n  },\n  homeScreenFilename: {\n    marginVertical: 7\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)'\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center'\n  },\n  tabBarInfoContainer: _objectSpread({\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0\n  }, Platform.select({\n    ios: {\n      shadowColor: 'black',\n      shadowOffset: {\n        width: 0,\n        height: -3\n      },\n      shadowOpacity: 0.1,\n      shadowRadius: 3\n    },\n    android: {\n      elevation: 20\n    }\n  }), {\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20\n  }),\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center'\n  },\n  navigationFilename: {\n    marginTop: 5\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center'\n  },\n  helpLink: {\n    paddingVertical: 15\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7'\n  },\n  title: {\n    fontSize: 20,\n    padding: 5\n  },\n  item: {\n    backgroundColor: '#ff00ff00',\n    padding: 5,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 50 / 2,\n    overflow: \"hidden\"\n  }\n});","map":{"version":3,"sources":["/home/marina/Application/Blockchain-Certificates-Authentication/screens/HomeScreen.js"],"names":["React","WebBrowser","Card","SearchBar","useAsyncEffect","useForceUpdate","WALLET_ID","console","disableYellowBox","connectionDataArray","details2","details","detailsOfVer","detailsOfVer2","HomeScreen","route","navigation","walletID","useState","credentials","setCredentials","Verifications","setVerification","offeredCredentials","setOfferedCredentials","requestedVerifications","setrequestedVerifications","VerificationDetailsArray","setVerificationDetailsArray","VerificationDetailsArraySize","setVerificationDetailsArraySize","arraySize2","setArraySize2","arraySizeVer","setArraySizeVer","connectionDetailsArray","setConnectionDetailsArray","connectionDetailsArraySize","setConnectionDetailsArraySize","count","setCount","offeredCredentialsArraySize","setOfferedCredentialsArraySize","RequestedVerificationsArraySize","setRequestedVerificationsArraySize","useInterval","fetchAllCredentials","fetchCredentials","data","fetchVerifications","dataVer","length","fetchOfferedCredentials","fetchRequestedVerifications","Object","keys","fillConnectionDataArray","removeIssuedCredential","removeRequestedVerification","error","callback","delay","savedCallback","useRef","useEffect","current","isFocused","tick","id","setInterval","clearInterval","ItemC","title","url","credentialId","navigate","img","name","styles","item","backgroundColor","uri","image","paragraph","ItemV","verificationId","addConnectionDetails","arr","myID","object","found","some","el","push","fetch","method","headers","Authorization","XStreetcredSubscriptionKey","Accept","res","json","cred","currArraySize2","index","state","tempConnectionID","connectionId","connection","index2","objj","imageUrl","type","obj","log","ver","currArraySizeVer","tempVerConnectionID","temArray","splice","tempArray","index3","container","welcomeContainer","__DEV__","require","welcomeImage","tabBarInfoContainer","navigationOptions","header","DevelopmentModeNotice","learnMoreButton","handleLearnMorePress","helpLinkText","developmentModeText","openBrowserAsync","handleHelpPress","StyleSheet","create","flex","alignItems","bottom","justifyContent","marginBottom","color","fontSize","lineHeight","textAlign","contentContainer","paddingTop","marginTop","width","height","resizeMode","marginLeft","linearGradient","flexDirection","borderRadius","buttonText","fontFamily","margin","getStartedContainer","marginHorizontal","homeScreenFilename","marginVertical","codeHighlightText","codeHighlightContainer","paddingHorizontal","getStartedText","position","left","right","Platform","select","ios","shadowColor","shadowOffset","shadowOpacity","shadowRadius","android","elevation","paddingVertical","tabBarInfoText","navigationFilename","helpContainer","helpLink","padding","flexWrap","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {Platform, StyleSheet, Text, TouchableOpacity, View, Button, FlatList, SafeAreaView,Image } from 'react-native';\nimport * as WebBrowser from 'expo-web-browser';\nimport { Card, SearchBar } from 'react-native-elements';\nimport useAsyncEffect from 'use-async-effect';\nimport useForceUpdate from 'use-force-update';\nimport { WALLET_ID } from '../constants'\n\nconsole.disableYellowBox = true;\n\n  \nvar connectionDataArray=[];\nlet details2=[];\nlet details = [];\nlet detailsOfVer =[];\nlet detailsOfVer2 =[];\n\n\nexport default function HomeScreen({ route, navigation }) {\n\n  // var walletID = \"CrtAMYWLD5ZdkowDdHreNz9goN3kLDsUC\";\n  var walletID = WALLET_ID;\n\n  const [credentials, setCredentials] = React.useState([]);\n  const [Verifications, setVerification] = React.useState([]);\n  const [offeredCredentials,setOfferedCredentials] = React.useState([]);\n  const [requestedVerifications,setrequestedVerifications] = React.useState([]);\n  const [VerificationDetailsArray,setVerificationDetailsArray]= React.useState([]);\n  const [VerificationDetailsArraySize, setVerificationDetailsArraySize] = React.useState(0);\n  const [arraySize2, setArraySize2] = React.useState(0); \n  const [arraySizeVer, setArraySizeVer] = React.useState(0); \n  const [connectionDetailsArray, setConnectionDetailsArray] = React.useState([]); \n  const [connectionDetailsArraySize, setConnectionDetailsArraySize] = React.useState(0);\n  const [count, setCount] = React.useState(false);\n  const [offeredCredentialsArraySize,setOfferedCredentialsArraySize] = React.useState(0);\n  const [RequestedVerificationsArraySize, setRequestedVerificationsArraySize] = React.useState(0);\n \n useInterval(() => {\n  try {\n    const fetchAllCredentials = async() => {\n      const data= await fetchCredentials();\n      setCredentials(data);\n      const dataVer= await fetchVerifications();\n\n      setVerification(dataVer);\n      setArraySizeVer(dataVer.length);\n\n      setArraySize2(data.length);\n      details=await fetchOfferedCredentials(data);\n      detailsOfVer= await fetchRequestedVerifications(dataVer);\n\n       setConnectionDetailsArray(details);\n       setVerificationDetailsArray(detailsOfVer);\n       setConnectionDetailsArraySize(Object.keys(details).length);\n       setVerificationDetailsArraySize(Object.keys(detailsOfVer).length);\n     } \n   fetchAllCredentials();\n   fillConnectionDataArray();\n   removeIssuedCredential();\n   removeRequestedVerification();\n    \n  } catch (error) {\n    \n  }\n  \n}, 8000);\n\n function useInterval(callback, delay) {\n  const savedCallback = React.useRef();\n  React.useEffect(() => {\n    savedCallback.current = callback;\n    const isFocused = navigation.isFocused();  \n  },[callback]);\n\n  React.useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n\n}\n \n  function ItemC({ title, url,credentialId }) { //for credential items\n    //console.log(\"render\");\n    return (\n       <TouchableOpacity\n          onPress={() => navigation.navigate('OfferDetails',\n          {\n             img : url , \n             name : title,\n             credentialId:credentialId\n          ,})}\n          style={[\n             styles.item,\n             { backgroundColor:'#ffffff' },\n          ]}        \n       >\n        <Card title=\"Credential Offer\">\n        <View style={styles.item}>\n          <Image source={{ uri: url }} style={styles.image} />\n            <Text style={styles.title}>{title}</Text> \n         </View>   \n         <Text style={styles.paragraph}>You have a new credential offer</Text>  \n        </Card>\n       </TouchableOpacity>\n    );\n  }\n\n  function ItemV({ title, url,verificationId,}) { //for verification items\n    //console.log(\"render\");    \n    return (\n       <TouchableOpacity\n          onPress={() => navigation.navigate('VerificationRequestDetails',\n          {\n             img : url , \n             name : title,\n             verificationId:verificationId\n          ,})}\n          style={[\n             styles.item,\n             { backgroundColor:'#ffffff' },\n          ]}        \n       >\n        <Card title=\"Verification Request\">\n        <View style={styles.item}>\n          <Image source={{ uri: url }} style={styles.image} />\n            <Text style={styles.title}>{title}</Text> \n         </View>   \n         <Text style={styles.paragraph}>You are required to verify this information</Text>  \n        </Card>\n       </TouchableOpacity>\n    );\n  }\n\n  \n  function addConnectionDetails(arr, myID, object) {\n    const found = arr.some(el => el.id == myID);\n    if (!found) {\n       arr.push(object);\n    }\n    return arr;\n }\n\n async function fetchCredentials() {  \n  const res = await fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials', {\n     method: 'GET',\n     headers: {\n      Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n      XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n        Accept: 'application/json',\n     },\n  });\n  var cred = await res.json();\n return cred;   \n}\n\n  async function fetchOfferedCredentials(data)\n  { \n      currArraySize2 = arraySize2 ;\n      for (let index = 0; index < data.length ; index++) \n      {\n        if(data[index].state==\"Offered\")\n        {          \n          setOfferedCredentials(addConnectionDetails(offeredCredentials,data[index].credentialId ,data[index]));\n          let tempConnectionID= data[index].connectionId;\n          const res = await fetch('https://api.streetcred.id/custodian/v1/api/'+walletID+'/connections/'+tempConnectionID, {\n            method: 'GET',\n            headers: {\n              Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n              XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json',\n            },\n          });\n          var connection = await res.json();\n          details2 = addConnectionDetails(details,connection.connectionId,connection)\n          setOfferedCredentialsArraySize(offeredCredentials.length);\n        }\n      }\n      return details2\n    \n  }\n\n  function fillConnectionDataArray()\n  {\n    try {\n        if(VerificationDetailsArraySize>0)\n        {\n          for (let index = 0; index < requestedVerifications.length; index++) {\n            for (let index2 = 0; index2 < VerificationDetailsArray.length; index2++) {\n              if( VerificationDetailsArray[index2].connectionId === requestedVerifications[index].connectionId){\n              const objj = { id: VerificationDetailsArray[index2].connectionId,verificationId:requestedVerifications[index].verificationId, title: VerificationDetailsArray[index2].name, image: VerificationDetailsArray[index2].imageUrl , type:'Verification' }; \n              connectionDataArray=addConnectionDetails(connectionDataArray,objj.id,objj); \n            }\n          }\n          if(connectionDetailsArraySize>0)\n          {\n            for (let index = 0; index < offeredCredentials.length; index++) {\n              for (let index2 = 0; index2 < connectionDetailsArray.length; index2++) {\n                if( connectionDetailsArray[index2].connectionId === offeredCredentials[index].connectionId){\n                  const obj = { id: connectionDetailsArray[index2].connectionId,credentialId:offeredCredentials[index].credentialId, title: connectionDetailsArray[index2].name, image: connectionDetailsArray[index2].imageUrl, type:'Credential' };  \n                  connectionDataArray=addConnectionDetails(connectionDataArray,obj.id,obj); \n                }\n              }\n            }\n          }\n        }\n        console.log(connectionDataArray);\n      }\n      }\n    catch (error) {\n        console.log(error)\n    }   \n  }\n    \n  async function fetchVerifications() {\n    const res = await fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/verifications', {\n       method: 'GET',\n       headers: {\n        Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n        XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n          Accept: 'application/json',\n       },\n    });\n    var ver = await res.json();\n   return ver;   \n  }\n\n  async function fetchRequestedVerifications(dataVer)\n  { \n      currArraySizeVer= arraySizeVer ;\n      for (let index = 0; index < dataVer.length ; index++) \n      {\n        if(dataVer[index].state==\"Requested\")\n        {\n          setrequestedVerifications(addConnectionDetails(requestedVerifications,dataVer[index].verificationId ,dataVer[index]));\n          let tempVerConnectionID= dataVer[index].connectionId;\n          const res = await fetch('https://api.streetcred.id/custodian/v1/api/'+walletID+'/connections/'+tempVerConnectionID, {\n            method: 'GET',\n            headers: {\n              Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n              XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json',\n            },\n          });\n          \n          var ver = await res.json();\n          detailsOfVer2 = addConnectionDetails(detailsOfVer,ver.connectionId,ver)\n          setOfferedCredentialsArraySize(offeredCredentials.length);\n          setRequestedVerificationsArraySize(requestedVerifications.length);\n        }\n      }\n      return detailsOfVer2;\n  }\n  \n  function removeIssuedCredential(){\n    var temArray=[]; \n    setOfferedCredentials(temArray);\n    for (let index = 0; index < arraySize2; index++) \n    {\n      if(credentials[index].state==\"Issued\")\n        {\n          for (let index2 = 0; index2 < connectionDataArray.length; index2++) {\n              if(connectionDataArray[index2].credentialId == credentials[index].credentialId)\n              {\n                connectionDataArray.splice(index2,1)\n                setOfferedCredentialsArraySize(offeredCredentials.length);\n              }\n          }    \n        }\n    }\n    if(connectionDataArray.length>0){\n      setCount(true)\n    }\n    else\n      setCount(false)  \n  }\n\n  function removeRequestedVerification(){\n    var tempArray=[]; \n    setrequestedVerifications(tempArray);\n    for (let index = 0; index < arraySizeVer; index++) \n    {\n      if(credentials[index].state==\"Accepted\")\n        {\n          for (let index3 = 0; index3 < connectionDataArray.length; index3++) {\n              if(connectionDataArray[index3].verificationId == Verifications[index].verificationId)\n              {\n                connectionDataArray.splice(index2,1)\n                setrequestedVerifications(requestedVerifications.length);\n              }\n          }    \n        }\n    }\n    if(connectionDataArray.length>0){\n      setCount(true)\n    }\n    else\n      setCount(false)  \n    }\n\n\n  return (\n    <View style={styles.container}>    \n    {count ?\n        (\n          <SafeAreaView style={styles.container}>\n            <FlatList\n                data={connectionDataArray}\n                keyExtractor={item => item.id}\n                renderItem={({ item }) => { \n                if (item.type ==\"Credential\")\n                  { \n                    return <ItemC  title={item.title} url={item.image} credentialId={item.credentialId} />;\n\n                }\n                else if(item.type ==\"Verification\")\n                  {\n                    return <ItemV  title={item.title} url={item.image} verificationId={item.verificationId} />;\n                }\n              }\n              \n        }/>\n          </SafeAreaView>)\n        :\n          (<View style={styles.welcomeContainer}> \n             <Image\n            source={\n              __DEV__\n                ? require('../assets/images/barcode.png')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}\n          />\n          </View>)\n    }\n     <View  style={styles.tabBarInfoContainer}> \n           <Button \n            title=\"SCAN CODE\" type=\"outline\" onPress={() => navigation.navigate('QRScanner')} />  \n       </View>\n       \n    </View>\n  );\n  }\nHomeScreen.navigationOptions = {\n  header: null,\n  \n};\n\nfunction DevelopmentModeNotice() {\n  if (__DEV__) {\n    const learnMoreButton = (\n      <Text onPress={handleLearnMorePress} style={styles.helpLinkText}>\n        Learn more\n      </Text>\n    );\n\n    return (\n      <Text style={styles.developmentModeText}>\n        Development mode is enabled: your app will be slower but you can use useful development\n        tools. {learnMoreButton}\n      </Text>\n    );\n  } else {\n    return (\n      <Text style={styles.developmentModeText}>\n        You are not in development mode: your app will run at full speed.\n      </Text>\n    );\n  }\n}\n\nfunction handleLearnMorePress() {\n  WebBrowser.openBrowserAsync('https://docs.expo.io/versions/latest/workflow/development-mode/');\n}\n\nfunction handleHelpPress() {\n  WebBrowser.openBrowserAsync(\n    'https://docs.expo.io/versions/latest/get-started/create-a-new-app/#making-your-first-change'\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  bottom: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 36\n  },\n  developmentModeText: {\n    marginBottom: 20,\n    color: 'rgba(0,0,0,0.4)',\n    fontSize: 14,\n    lineHeight: 19,\n    textAlign: 'center',\n  },\n  contentContainer: {\n    paddingTop: 30,\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20,\n  },\n  welcomeImage: {\n    width: 150,\n    height: 180,\n    resizeMode: 'contain',\n    marginTop: 100,\n    marginLeft: -10,\n  },\n  linearGradient: {\n    \n    flexDirection:'row',\n    marginTop: 230,\n    borderRadius: 5,\n    \n  },\n  buttonText: {\n    fontSize: 24,\n    fontFamily: 'Gill Sans',\n    textAlign: 'center',\n    margin: 10,\n    color: '#ffffff',\n    backgroundColor: 'transparent',\n    \n  },\n  getStartedContainer: {\n    alignItems: 'center',\n    marginHorizontal: 50,\n  },\n  homeScreenFilename: {\n    marginVertical: 7,\n  },\n  codeHighlightText: {\n    color: 'rgba(96,100,109, 0.8)',\n  },\n  codeHighlightContainer: {\n    backgroundColor: 'rgba(0,0,0,0.05)',\n    borderRadius: 3,\n    paddingHorizontal: 4,\n  },\n  getStartedText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    lineHeight: 24,\n    textAlign: 'center',\n  },\n  tabBarInfoContainer: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    ...Platform.select({\n      ios: {\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: -3 },\n        shadowOpacity: 0.1,\n        shadowRadius: 3,\n      },\n      android: {\n        elevation: 20,\n      },\n    }),\n    alignItems: 'center',\n    backgroundColor: '#fbfbfb',\n    paddingVertical: 20,\n  },\n  tabBarInfoText: {\n    fontSize: 17,\n    color: 'rgba(96,100,109, 1)',\n    textAlign: 'center',\n  },\n  navigationFilename: {\n    marginTop: 5,\n  },\n  helpContainer: {\n    marginTop: 15,\n    alignItems: 'center',\n  },\n  helpLink: {\n    paddingVertical: 15,\n  },\n  helpLinkText: {\n    fontSize: 14,\n    color: '#2e78b7',\n  },\n  title: {\n    fontSize: 20,\n    padding: 5,\n    \n },\n item: {\n  backgroundColor: '#ff00ff00',\n  padding: 5,\n  marginVertical: 8,\n  marginHorizontal: 16,\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n},\n image: {\n    width: 50,\n    height: 50,\n    borderRadius: 50 / 2,\n    overflow: \"hidden\",\n    // borderWidth: 3,\n    // borderColor: \"black\"\n },\n});\n"]},"metadata":{},"sourceType":"module"}