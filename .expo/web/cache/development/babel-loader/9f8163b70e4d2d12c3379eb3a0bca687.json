{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/marina/Application/Blockchain-Certificates-Authentication/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport BottomTabNavigator from \"./navigation/BottomTabNavigator\";\nimport useLinking from \"./navigation/useLinking\";\nimport QRScanner from \"./navigation/QRScanner\";\nimport LinksScreen from \"./screens/LinksScreen\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport OfferDetailsScreen from \"./screens/OfferDetailsScreen\";\nvar Stack = createStackNavigator();\nvar walletIsCreated = false;\nvar userName;\nexport default function App(props) {\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isLoadingComplete = _React$useState2[0],\n      setLoadingComplete = _React$useState2[1];\n\n  var _React$useState3 = React.useState(),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      initialNavigationState = _React$useState4[0],\n      setInitialNavigationState = _React$useState4[1];\n\n  var containerRef = React.useRef();\n\n  var _useLinking = useLinking(containerRef),\n      getInitialState = _useLinking.getInitialState;\n\n  function createWallet() {\n    fetch('https://api.streetcred.id/custodian/v1/api/wallets', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n        XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        \"ownerName\": \"testMohammed\"\n      })\n    });\n    walletIsCreated = true;\n  }\n\n  ;\n  React.useEffect(function () {\n    function loadResourcesAndDataAsync() {\n      return _regeneratorRuntime.async(function loadResourcesAndDataAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              SplashScreen.preventAutoHide();\n              _context.t0 = setInitialNavigationState;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(getInitialState());\n\n            case 5:\n              _context.t1 = _context.sent;\n              (0, _context.t0)(_context.t1);\n              _context.next = 9;\n              return _regeneratorRuntime.awrap(Font.loadAsync(_objectSpread({}, Ionicons.font, {\n                'space-mono': require(\"./assets/fonts/SpaceMono-Regular.ttf\")\n              })));\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t2 = _context[\"catch\"](0);\n              console.warn(_context.t2);\n\n            case 14:\n              _context.prev = 14;\n              setLoadingComplete(true);\n              SplashScreen.hide();\n              return _context.finish(14);\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11, 14, 18]]);\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      }\n    }, Platform.OS === 'ios' && React.createElement(StatusBar, {\n      barStyle: \"default\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      }\n    }), React.createElement(NavigationContainer, {\n      ref: containerRef,\n      initialState: initialNavigationState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }\n    }, React.createElement(Stack.Navigator, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      }\n    }, React.createElement(Stack.Screen, {\n      name: \"Root\",\n      component: BottomTabNavigator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"QRScanner\",\n      component: QRScanner,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Links\",\n      component: LinksScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"Details\",\n      component: DetailsScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"OfferDetails\",\n      component: OfferDetailsScreen,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      }\n    }), React.createElement(Stack.Screen, {\n      name: \"HomeScreen\",\n      component: HomeScreen,\n      initialParams: {\n        text: 'Ya Rab'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      }\n    }))));\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/home/marina/Application/Blockchain-Certificates-Authentication/App.js"],"names":["React","useState","useEffect","SplashScreen","Font","Ionicons","NavigationContainer","createStackNavigator","BottomTabNavigator","useLinking","QRScanner","LinksScreen","DetailsScreen","HomeScreen","OfferDetailsScreen","Stack","walletIsCreated","userName","App","props","isLoadingComplete","setLoadingComplete","initialNavigationState","setInitialNavigationState","containerRef","useRef","getInitialState","createWallet","fetch","method","headers","Authorization","XStreetcredSubscriptionKey","Accept","body","JSON","stringify","loadResourcesAndDataAsync","preventAutoHide","loadAsync","font","require","console","warn","hide","skipLoadingScreen","styles","container","Platform","OS","text","StyleSheet","create","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport { Platform, StatusBar, StyleSheet, View } from 'react-native';\nimport { SplashScreen } from 'expo';\nimport * as Font from 'expo-font';\nimport { Ionicons } from '@expo/vector-icons';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\n\nimport BottomTabNavigator from './navigation/BottomTabNavigator';\nimport useLinking from './navigation/useLinking';\nimport QRScanner from './navigation/QRScanner';\nimport LinksScreen from \"./screens/LinksScreen\";\nimport DetailsScreen from \"./screens/DetailsScreen\";\nimport HomeScreen from './screens/HomeScreen';\nimport OfferDetailsScreen from './screens/OfferDetailsScreen';\n// import VerRequestDetails from './screens/VerRequestDetails';\n\n\n\nconst Stack = createStackNavigator();\nvar walletIsCreated=false;\nvar userName;\n\nexport default function App(props) {\n  const [isLoadingComplete, setLoadingComplete] = React.useState(false);\n  const [initialNavigationState, setInitialNavigationState] = React.useState();\n  const containerRef = React.useRef();\n  const { getInitialState } = useLinking(containerRef);\n\n  \n   function createWallet()\n   {\n    \n    fetch('https://api.streetcred.id/custodian/v1/api/wallets', {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n        XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n          \"ownerName\": \"testMohammed\"\n      }),\n    });\n    walletIsCreated=true;\n\n   };  \n\n   \n    \n\n  //  if(!walletIsCreated)\n  //  {createWallet();}\n   \n   \n  \n      \n  //Delete\n  //     var fetchURLForDellet='https://api.streetcred.id/custodian/v1/api/wallets?walletId=';\n  //     //console.log(fetchURLForDellet)\n      \n  //     for (let index = 0; index < wallets.length; index++) {\n  //       fetchURLForDellet='https://api.streetcred.id/custodian/v1/api/wallets?walletId='+wallets[index].walletId;\n  //       //console.log(fetchURLForDellet) \n      \n  //     fetch(fetchURLForDellet, {\n  //     method: 'DELETE',\n  //     headers: {\n  //       Authorization: 'Bearer dq6RoZ4gJWss_hRtGC_cyUBv66JwZhUbRRKukMPtv4o',\n  //       XStreetcredSubscriptionKey: '0c1596b315f84ac9a4de6810ef464411',\n  //       Accept: 'application/json',\n  //       'Content-Type': 'application/json',\n  //     },\n  //     body: JSON.stringify({\n  //         \"walletId\": \"c4w1AlUuL055Y41yeQjmumdI0stBZ4Gt\"\n  //     }),\n  //   });\n  // }\n  //Delete \n\n  // Load any resources or data that we need prior to rendering the app\n  React.useEffect(() => {\n    async function loadResourcesAndDataAsync() {\n      try {\n        SplashScreen.preventAutoHide();\n\n        // Load our initial navigation state\n        setInitialNavigationState(await getInitialState());\n\n        // Load fonts\n        await Font.loadAsync({\n          ...Ionicons.font,\n          'space-mono': require('./assets/fonts/SpaceMono-Regular.ttf'),\n        });\n      } catch (e) {\n        // We might want to provide this error information to an error reporting service\n        console.warn(e);\n      } finally {\n        setLoadingComplete(true);\n        SplashScreen.hide();\n      }\n    }\n\n    loadResourcesAndDataAsync();\n  }, []);\n\n  if (!isLoadingComplete && !props.skipLoadingScreen) {\n    return null;\n  } else {\n    return (\n      <View style={styles.container}>\n        {Platform.OS === 'ios' && <StatusBar barStyle=\"default\" />}\n        <NavigationContainer ref={containerRef} initialState={initialNavigationState}>\n          <Stack.Navigator>\n            <Stack.Screen name=\"Root\" component={BottomTabNavigator} />\n            <Stack.Screen name=\"QRScanner\" component={QRScanner} />\n            <Stack.Screen name=\"Links\" component={LinksScreen}/>\n            <Stack.Screen name=\"Details\" component={DetailsScreen}/>\n            <Stack.Screen name=\"OfferDetails\" component={OfferDetailsScreen}/>\n            {/* <Stack.Screen name=\"VerificationRequestDetails\" component={VerRequestDetails}/>  */}\n            <Stack.Screen name=\"HomeScreen\" \n            component={HomeScreen} \n            initialParams={{ text: 'Ya Rab' }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}