{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"/home/marina/Application/Blockchain-Certificates-Authentication/screens/OfferDetailsScreen.js\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Card } from 'react-native-elements';\nimport { WALLET_ID } from \"../constants\";\nexport default function OfferDetailsScreen(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var name = route.params.name;\n  var img = route.params.img;\n  var credentialId = route.params.credentialId;\n  var walletID = WALLET_ID;\n\n  function sendAcceptOfferNotification() {\n    var res;\n    return _regeneratorRuntime.async(function sendAcceptOfferNotification$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('http://e1475bee.ngrok.io/webhook', {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                \"Content-Type\": 'application/json'\n              },\n              body: JSON.stringify({\n                \"message_type\": \"credential_request\"\n              })\n            }));\n\n          case 2:\n            res = _context.sent;\n            res.json().then(console.log(JSON.stringify(res)));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function acceptButton(walletID, credentialID) {\n    var fetchURLForAcceptInvitaion, res;\n    return _regeneratorRuntime.async(function acceptButton$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            fetchURLForAcceptInvitaion = 'https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials/' + credentialID;\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch(fetchURLForAcceptInvitaion, {\n              method: 'POST',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json',\n                \"Content-Type\": 'application/json'\n              },\n              body: JSON.stringify({\n                \"walletId\": walletID,\n                \"credentialId\": credentialID\n              })\n            }));\n\n          case 3:\n            res = _context2.sent;\n            sendAcceptOfferNotification();\n            navigation.navigate(\"Root\");\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function declineButton() {\n    navigation.navigate(\"Root\");\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    }\n  }, React.createElement(Card, {\n    title: \"Credential Offer Details\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    }\n  }, React.createElement(View, {\n    style: styles.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    }\n  }, React.createElement(Image, {\n    source: {\n      uri: img\n    },\n    style: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    }\n  }), React.createElement(Text, {\n    style: styles.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    }\n  }, name)), React.createElement(Text, {\n    style: styles.paragraph,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    }\n  }, \"You have a new credential offer\"), React.createElement(View, {\n    style: styles.alternativeLayoutButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    }\n  }, React.createElement(Button, {\n    title: \"Accept\",\n    onPress: function onPress() {\n      return acceptButton(walletID, credentialId);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    }\n  }), React.createElement(Button, {\n    title: \"Decline\",\n    onPress: function onPress() {\n      return declineButton();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 40,\n    backgroundColor: '#ecf0f1'\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#34495e'\n  },\n  title: {\n    fontSize: 20,\n    padding: 5\n  },\n  item: {\n    backgroundColor: '#ff00ff00',\n    padding: 5,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 50 / 2,\n    overflow: \"hidden\"\n  },\n  alternativeLayoutButtonContainer: {\n    margin: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});","map":{"version":3,"sources":["/home/marina/Application/Blockchain-Certificates-Authentication/screens/OfferDetailsScreen.js"],"names":["React","Card","WALLET_ID","OfferDetailsScreen","route","navigation","name","params","img","credentialId","walletID","sendAcceptOfferNotification","fetch","method","headers","Accept","body","JSON","stringify","res","json","then","console","log","acceptButton","credentialID","fetchURLForAcceptInvitaion","Authorization","XStreetcredSubscriptionKey","navigate","declineButton","styles","item","uri","image","title","paragraph","alternativeLayoutButtonContainer","StyleSheet","create","container","flex","alignItems","justifyContent","paddingTop","backgroundColor","margin","fontSize","fontWeight","textAlign","color","padding","marginVertical","marginHorizontal","flexDirection","flexWrap","width","height","borderRadius","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, View, Button,Image } from 'react-native';\nimport { Card } from 'react-native-elements';\nimport { WALLET_ID } from '../constants'\n\n\nexport default function OfferDetailsScreen({ route, navigation }) {\n  const { name } = route.params;\n  const { img } = route.params;\n  const { credentialId } = route.params;\n  //console.log(Item.credentialId);\n  var walletID = WALLET_ID;\n\n\n  async function sendAcceptOfferNotification() {\n    const res = await fetch('http://e1475bee.ngrok.io/webhook', {\n      method: 'POST',\n      headers: {\n        Accept: 'application/json',\n        \"Content-Type\": 'application/json',\n      },\n      body: JSON.stringify({\n        \"message_type\": \"credential_request\"\n      }),\n    });\n    res.json().then(console.log(JSON.stringify(res)))\n\n  }\n\n  async function acceptButton(walletID, credentialID) {\n    var fetchURLForAcceptInvitaion = 'https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials/' + credentialID;\n    const res = await fetch(fetchURLForAcceptInvitaion, {\n      method: 'POST',\n      headers: {\n        Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n        XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n        Accept: 'application/json',\n        \"Content-Type\": 'application/json',\n      },\n      body: JSON.stringify({\n        \"walletId\": walletID,\n        \"credentialId\": credentialID\n      }),\n    })\n    sendAcceptOfferNotification();\n    navigation.navigate(\"Root\");\n  }\n\n\n  function declineButton() {\n\n    navigation.navigate(\"Root\");\n  }\n\n\n  return (\n    <View>\n      <Card title=\"Credential Offer Details\">\n      <View style={styles.item}>\n          <Image source={{ uri: img }} style={styles.image} />\n            <Text style={styles.title}>{name}</Text> \n         </View>   \n         <Text style={styles.paragraph}>You have a new credential offer</Text>  \n        <View style={styles.alternativeLayoutButtonContainer}>\n          <Button\n            title=\"Accept\"\n            onPress={() => acceptButton(walletID, credentialId)}\n          />\n          <Button\n            title=\"Decline\"\n            onPress={() => declineButton()}\n          />\n        </View>\n      </Card>\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingTop: 40,\n    backgroundColor: '#ecf0f1',\n  },\n  paragraph: {\n    margin: 24,\n    fontSize: 18,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#34495e',\n  },\n  title: {\n    fontSize: 20,\n    padding: 5,\n    \n },\n item: {\n  backgroundColor: '#ff00ff00',\n  padding: 5,\n  marginVertical: 8,\n  marginHorizontal: 16,\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n},\n image: {\n    width: 50,\n    height: 50,\n    borderRadius: 50 / 2,\n    overflow: \"hidden\",\n    // borderWidth: 3,\n    // borderColor: \"black\"\n },\n  alternativeLayoutButtonContainer: {\n    margin: 20,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}