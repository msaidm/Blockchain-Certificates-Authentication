{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/marina/Application/Blockchain-Certificates-Authentication/screens/LinksScreen.js\";\nimport * as React from 'react';\nimport { Header, Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Constants from 'expo-constants';\nimport * as Font from 'expo-font';\nimport arrow from \"../assets/images/simple-down-arrow.png\";\nimport { SearchBar } from 'react-native-elements';\nimport { WALLET_ID } from \"../constants\";\n\nfunction useInterval(callback, delay) {\n  var savedCallback = React.useRef();\n  React.useEffect(function () {\n    savedCallback.current = callback;\n  }, [callback]);\n  React.useEffect(function () {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      var id = setInterval(tick, delay);\n      return function () {\n        return clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n\nvar Tab = createMaterialTopTabNavigator();\nvar waitFor = 5000;\n\nFlatListItemSeparator = function FlatListItemSeparator() {\n  return React.createElement(View, {\n    style: {\n      height: 1,\n      width: \"100%\",\n      backgroundColor: \"darkgray\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    }\n  });\n};\n\nfunction add(arr, myID, object) {\n  var found = arr.some(function (el) {\n    return el.id == myID;\n  });\n\n  if (!found) {\n    arr.push(object);\n  }\n\n  return arr;\n}\n\nvar connectionName;\nvar connectionsArray = [\"\"];\nvar currArraySize = 0;\nvar currArraySize2 = 0;\nvar connectionsData = [];\n\nfunction CredentialsScreen(_ref) {\n  var navigation = _ref.navigation;\n  var walletID = WALLET_ID;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      credentials = _React$useState2[0],\n      setCredentials = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      arraySize2 = _React$useState4[0],\n      setArraySize2 = _React$useState4[1];\n\n  var _React$useState5 = React.useState([]),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      values = _React$useState6[0],\n      setValues = _React$useState6[1];\n\n  var _React$useState7 = React.useState(\"\"),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      searchText = _React$useState8[0],\n      setSearchText = _React$useState8[1];\n\n  var _React$useState9 = React.useState(true),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      empty = _React$useState10[0],\n      setEmpty = _React$useState10[1];\n\n  searchFilterFunction = function searchFilterFunction(text, arrayholder) {\n    setSearchText(text);\n    console.log(\"arrayholder: \", arrayholder);\n    var newData = arrayholder.filter(function (item) {\n      var itemData = item.type ? item.type.toUpperCase() : ''.toUpperCase();\n      console.log(\"itemData: \", itemData);\n      var textData = text.toUpperCase();\n      console.log(\"textData: \", textData);\n      return itemData.indexOf(textData) > -1;\n    });\n    console.log(\"newData: \", newData);\n    setValues(newData);\n  };\n\n  function Item(_ref2) {\n    var objectt = _ref2.objectt;\n    var img, title;\n    var connId = objectt.connID;\n\n    for (i = 0; i < connectionsData.length; i++) {\n      if (connectionsData[i].id == connId) {\n        img = connectionsData[i].image;\n        title = connectionsData[i].title;\n      }\n    }\n\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Details', {\n          Item: objectt,\n          image: img,\n          name: title\n        });\n      },\n      style: [styles.item],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      }\n    }, objectt.type), React.createElement(Image, {\n      source: arrow,\n      style: {\n        width: 20,\n        height: 20,\n        alignSelf: 'flex-end'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      }\n    }));\n  }\n\n  useInterval(function () {\n    fetchCredentials();\n  }, waitFor);\n\n  function fetchCredentials() {\n    var res, index, state, data, obj;\n    return _regeneratorRuntime.async(function fetchCredentials$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials', {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 2:\n            res = _context.sent;\n            res.json().then(function (res) {\n              return setCredentials(res);\n            }).then(setArraySize2(credentials.length));\n            console.log(\"size: \" + arraySize2);\n            currArraySize2 = arraySize2;\n\n            for (index = 0; index < arraySize2; index++) {\n              state = credentials[index].state;\n\n              if (state == \"Issued\") {\n                data = credentials[index].values;\n                obj = {\n                  id: credentials[index].credentialId,\n                  sname: data.Name,\n                  sgpa: data.GPA,\n                  syear: data.Year,\n                  type: data.Type,\n                  connID: credentials[index].connectionId\n                };\n                setValues(add(values, credentials[index].credentialId, obj));\n              } else {}\n            }\n\n            if (currArraySize2 > 0) setEmpty(false);else setEmpty(true);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    }\n  }, empty ? React.createElement(View, {\n    style: styles.welcomeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    }\n  }, React.createElement(Image, {\n    source: __DEV__ ? require(\"../assets/images/cred.jpg\") : require(\"../assets/images/robot-prod.png\"),\n    style: styles.welcomeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    }\n  })) : React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    }\n  }, React.createElement(SearchBar, {\n    lightTheme: true,\n    round: true,\n    onChangeText: function onChangeText(text) {\n      return searchFilterFunction(text, values);\n    },\n    onClear: function onClear(text) {\n      return searchFilterFunction('', values);\n    },\n    value: searchText,\n    showLoading: false,\n    placeholder: \"Type Here...\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191\n    }\n  }), React.createElement(FlatList, {\n    data: values,\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item;\n      return React.createElement(Item, {\n        objectt: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: FlatListItemSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    }\n  })));\n}\n\nfunction ConnectionsScreen() {\n  var walletID = WALLET_ID;\n\n  var _React$useState11 = React.useState([]),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      wallets = _React$useState12[0],\n      setWallets = _React$useState12[1];\n\n  var _React$useState13 = React.useState(\"\"),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      connectionName = _React$useState14[0],\n      setConnectionName = _React$useState14[1];\n\n  var _React$useState15 = React.useState(0),\n      _React$useState16 = _slicedToArray(_React$useState15, 2),\n      arraySize = _React$useState16[0],\n      setArraySize = _React$useState16[1];\n\n  var _React$useState17 = React.useState([]),\n      _React$useState18 = _slicedToArray(_React$useState17, 2),\n      DATA = _React$useState18[0],\n      setData = _React$useState18[1];\n\n  var _React$useState19 = React.useState(true),\n      _React$useState20 = _slicedToArray(_React$useState19, 2),\n      empty = _React$useState20[0],\n      setEmpty = _React$useState20[1];\n\n  var index = 0;\n\n  function Item(_ref4) {\n    var title = _ref4.title,\n        url = _ref4.url;\n    return React.createElement(View, {\n      style: styles.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      }\n    }, React.createElement(Image, {\n      source: {\n        uri: url\n      },\n      style: styles.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      }\n    }), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      }\n    }, title));\n  }\n\n  useInterval(function () {\n    fetchConnections();\n  }, waitFor);\n\n  function fetchConnections() {\n    var res, _index, credentialsData, obj;\n\n    return _regeneratorRuntime.async(function fetchConnections$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Font.loadAsync({\n              Josefin: require(\"../assets/fonts/JosefinSans-SemiBold.ttf\")\n            }));\n\n          case 2:\n            _context2.next = 4;\n            return _regeneratorRuntime.awrap(fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/connections', {\n              method: 'GET',\n              headers: {\n                Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n                XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n                Accept: 'application/json'\n              }\n            }));\n\n          case 4:\n            res = _context2.sent;\n            res.json().then(function (res) {\n              return setWallets(res);\n            }).then(setConnectionName(wallets[0].name)).then(setArraySize(wallets.length));\n\n            if (arraySize > currArraySize) {\n              currArraySize = arraySize;\n\n              for (_index = 0; _index < arraySize; _index++) {\n                credentialsData = wallets[_index];\n                obj = {\n                  id: credentialsData.connectionId,\n                  title: credentialsData.name,\n                  image: credentialsData.imageUrl\n                };\n                setData(add(DATA, obj.id, obj));\n                connectionsData = add(connectionsData, obj.id, obj);\n              }\n            }\n\n            if (currArraySize > 0) setEmpty(false);else setEmpty(true);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    }\n  }, empty ? React.createElement(View, {\n    style: styles.welcomeContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    }\n  }, React.createElement(Image, {\n    source: __DEV__ ? require(\"../assets/images/conn.jpg\") : require(\"../assets/images/robot-prod.png\"),\n    style: styles.welcomeImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277\n    }\n  })) : React.createElement(SafeAreaView, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288\n    }\n  }, React.createElement(FlatList, {\n    data: DATA,\n    renderItem: function renderItem(_ref5) {\n      var item = _ref5.item;\n      return React.createElement(Item, {\n        title: item.title,\n        url: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id.toString();\n    },\n    ItemSeparatorComponent: FlatListItemSeparator,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289\n    }\n  })));\n}\n\nfunction MyTabs() {\n  return React.createElement(Tab.Navigator, {\n    initialRouteName: \"Credentials\",\n    tabBarOptions: {\n      activeTintColor: 'royalblue',\n      labelStyle: {\n        fontSize: 14\n      },\n      style: {\n        backgroundColor: 'white'\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Credentials\",\n    component: CredentialsScreen,\n    options: {\n      tabBarLabel: 'Credentials'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Connections\",\n    component: ConnectionsScreen,\n    options: {\n      tabBarLabel: 'Connections'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317\n    }\n  }));\n}\n\nvar Stack = createStackNavigator();\nexport default function LinksScreen(_ref6) {\n  var navigation = _ref6.navigation;\n  return React.createElement(MyTabs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330\n    }\n  });\n}\n\nfunction OptionButton(_ref7) {\n  var icon = _ref7.icon,\n      label = _ref7.label,\n      onPress = _ref7.onPress,\n      isLastOption = _ref7.isLastOption;\n  return React.createElement(RectButton, {\n    style: [styles.option, isLastOption && styles.lastOption],\n    onPress: onPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359\n    }\n  }, React.createElement(View, {\n    style: styles.optionIconContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360\n    }\n  }, React.createElement(Ionicons, {\n    name: icon,\n    size: 22,\n    color: \"rgba(0,0,0,0.35)\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361\n    }\n  })), React.createElement(View, {\n    style: styles.optionTextContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363\n    }\n  }, React.createElement(Text, {\n    style: styles.optionText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364\n    }\n  }, label))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  contentContainer: {\n    paddingTop: 15\n  },\n  welcomeContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    marginBottom: 20\n  },\n  welcomeImage: {\n    width: 150,\n    height: 180,\n    resizeMode: 'contain',\n    marginTop: 100,\n    marginLeft: -10\n  },\n  optionIconContainer: {\n    marginRight: 12\n  },\n  option: {\n    backgroundColor: '#fdfdfd',\n    paddingHorizontal: 15,\n    paddingVertical: 15,\n    borderWidth: StyleSheet.hairlineWidth,\n    borderBottomWidth: 0,\n    borderColor: '#ededed'\n  },\n  lastOption: {\n    borderBottomWidth: StyleSheet.hairlineWidth\n  },\n  optionText: {\n    fontSize: 15,\n    alignSelf: 'flex-start',\n    marginTop: 1\n  },\n  item: {\n    backgroundColor: '#ff00ff00',\n    padding: 5,\n    marginVertical: 8,\n    marginHorizontal: 16,\n    flexDirection: 'row',\n    flexWrap: 'wrap'\n  },\n  title: {\n    fontSize: 20,\n    padding: 5,\n    fontFamily: \"Josefin\"\n  },\n  image: {\n    width: 50,\n    height: 50,\n    borderRadius: 50 / 2,\n    overflow: \"hidden\"\n  }\n});","map":{"version":3,"sources":["/home/marina/Application/Blockchain-Certificates-Authentication/screens/LinksScreen.js"],"names":["React","Header","Component","Ionicons","WebBrowser","RectButton","ScrollView","NavigationContainer","createStackNavigator","createMaterialTopTabNavigator","Constants","Font","arrow","SearchBar","WALLET_ID","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval","Tab","waitFor","FlatListItemSeparator","height","width","backgroundColor","add","arr","myID","object","found","some","el","push","connectionName","connectionsArray","currArraySize","currArraySize2","connectionsData","CredentialsScreen","navigation","walletID","useState","credentials","setCredentials","arraySize2","setArraySize2","values","setValues","searchText","setSearchText","empty","setEmpty","searchFilterFunction","text","arrayholder","console","log","newData","filter","item","itemData","type","toUpperCase","textData","indexOf","Item","objectt","img","title","connId","connID","i","length","image","navigate","name","styles","alignSelf","fetchCredentials","fetch","method","headers","Authorization","XStreetcredSubscriptionKey","Accept","res","json","then","index","state","data","obj","credentialId","sname","Name","sgpa","GPA","syear","Year","Type","connectionId","container","welcomeContainer","__DEV__","require","welcomeImage","toString","ConnectionsScreen","wallets","setWallets","setConnectionName","arraySize","setArraySize","DATA","setData","url","uri","fetchConnections","loadAsync","Josefin","credentialsData","imageUrl","MyTabs","activeTintColor","labelStyle","fontSize","style","tabBarLabel","Stack","LinksScreen","OptionButton","icon","label","onPress","isLastOption","option","lastOption","flexDirection","optionIconContainer","optionTextContainer","optionText","StyleSheet","create","flex","contentContainer","paddingTop","alignItems","marginTop","marginBottom","resizeMode","marginLeft","marginRight","paddingHorizontal","paddingVertical","borderWidth","hairlineWidth","borderBottomWidth","borderColor","padding","marginVertical","marginHorizontal","flexWrap","fontFamily","borderRadius","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Header, Component } from 'react';\nimport { StyleSheet, Text, View, FlatList, SafeAreaView, TouchableOpacity, Image } from 'react-native';\nimport { Ionicons } from '@expo/vector-icons';\nimport * as WebBrowser from 'expo-web-browser';\nimport { RectButton, ScrollView } from 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport Constants from 'expo-constants';\nimport * as Font from 'expo-font';\nimport arrow from '../assets/images/simple-down-arrow.png';\nimport { SearchBar } from 'react-native-elements';\nimport { WALLET_ID } from '../constants'\n\n\n\nfunction useInterval(callback, delay) {\n   const savedCallback = React.useRef();\n\n   // Remember the latest function.\n   React.useEffect(() => {\n      savedCallback.current = callback;\n   }, [callback]);\n\n   // Set up the interval.\n   React.useEffect(() => {\n      function tick() {\n         savedCallback.current();\n      }\n      if (delay !== null) {\n         let id = setInterval(tick, delay);\n         return () => clearInterval(id);\n      }\n   }, [delay]);\n}\n\nconst Tab = createMaterialTopTabNavigator();\nconst waitFor = 5000;\n\nFlatListItemSeparator = () => {\n   return (\n      <View\n         style={{\n            height: 1,\n            width: \"100%\",\n            backgroundColor: \"darkgray\",\n         }}\n      />\n   );\n}\n\n\nfunction add(arr, myID, object) {\n   // const { length } = arr;\n   // const id = length + 1;\n   const found = arr.some(el => el.id == myID);\n   if (!found) {\n      arr.push(object);\n   }\n   return arr;\n}\n\nvar connectionName;\nvar connectionsArray = [\"\"];\nvar currArraySize = 0;\nvar currArraySize2 = 0;\nvar connectionsData = [];\n\nfunction CredentialsScreen({ navigation }) {\n   var walletID = WALLET_ID;\n\n   //var connectionID = \"d418f248-33a4-428c-aff1-1eeb00079e52\";\n\n   const [credentials, setCredentials] = React.useState([]);\n   const [arraySize2, setArraySize2] = React.useState(0);\n   const [values, setValues] = React.useState([]);\n   const [searchText, setSearchText] = React.useState(\"\");\n   const [empty, setEmpty] = React.useState(true);\n\n   searchFilterFunction = (text, arrayholder) => {\n      setSearchText(text);\n      console.log(\"arrayholder: \", arrayholder)\n      const newData = arrayholder.filter(function (item) {\n         //applying filter for the inserted text in search bar\n         const itemData = item.type ? item.type.toUpperCase() : ''.toUpperCase();\n         console.log(\"itemData: \", itemData)\n\n         const textData = text.toUpperCase();\n         console.log(\"textData: \", textData)\n\n         return itemData.indexOf(textData) > -1;\n      });\n\n      console.log(\"newData: \", newData)\n\n      setValues(newData);\n   };\n\n\n   function Item({ objectt }) {\n      var img, title;\n      var connId = objectt.connID;\n      for (i = 0; i < connectionsData.length; i++) {\n         if (connectionsData[i].id == connId) {\n            img = connectionsData[i].image\n            title = connectionsData[i].title\n         }\n      }\n      return (\n         <TouchableOpacity\n            onPress={() => navigation.navigate('Details',\n               {\n                  Item: objectt,\n                  image: img,\n                  name: title,\n               })}\n            style={[\n               styles.item,\n            ]}\n         >\n            <Text style={styles.title}>{objectt.type}</Text>\n            <Image source={arrow} style={{ width: 20, height: 20, alignSelf: 'flex-end' }} />\n         </TouchableOpacity>\n      );\n   }\n\n   // React.useEffect(() => {\n   //    (async () => {\n   //       fetchCredentials();\n   //    })();\n   // }, [credentials]);\n\n   useInterval(() => {\n      // Your custom logic here\n      fetchCredentials();\n   }, waitFor);\n\n   async function fetchCredentials() {\n      const res = await fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/credentials', {\n         method: 'GET',\n         headers: {\n            Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n            XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n            Accept: 'application/json',\n         },\n      });\n      res.json().then(res => setCredentials(res)).then(setArraySize2(credentials.length))\n      // //console.log(arraySize2);\n\n      console.log(\"size: \" + arraySize2)\n      currArraySize2 = arraySize2;\n      for (let index = 0; index < arraySize2; index++) {\n         const state = credentials[index].state\n         if (state == \"Issued\") {\n            const data = credentials[index].values\n            //to add a credential and if condition\n            const obj = { id: credentials[index].credentialId, sname: data.Name, sgpa: data.GPA, syear: data.Year, type: data.Type, connID: credentials[index].connectionId }\n            setValues(add(values, credentials[index].credentialId, obj));\n            // console.log(\"values:\", values)\n         }\n\n         else {\n\n         }\n      }\n      if(currArraySize2>0)\n         setEmpty(false)\n      else\n         setEmpty(true)\n   }\n\n   return (\n      <View  style={styles.container}>\n      {\n         empty?\n         (\n            <View style={styles.welcomeContainer}> \n             <Image\n            source={\n              __DEV__\n                ? require('../assets/images/cred.jpg')\n                : require('../assets/images/robot-prod.png')\n            }\n            style={styles.welcomeImage}/>\n          </View>\n         )\n         :\n         (\n            <SafeAreaView style={styles.container}>\n               <SearchBar\n                  lightTheme\n                  round\n                  onChangeText={text => searchFilterFunction(text, values)}\n                  onClear={text => searchFilterFunction('', values)}\n                  // autoCorrect={false}\n                  value={searchText}\n                  showLoading={false}\n                  placeholder=\"Type Here...\" />\n               <FlatList\n                  data={values}\n                  renderItem={({ item }) => <Item objectt={item} />}\n                  keyExtractor={item => item.id.toString()}\n                  ItemSeparatorComponent={FlatListItemSeparator}/>\n            </SafeAreaView>\n         )\n      }\n      </View>\n      \n   );\n}\n\nfunction ConnectionsScreen() {\n\n   var walletID = WALLET_ID;\n\n   const [wallets, setWallets] = React.useState([]);\n   const [connectionName, setConnectionName] = React.useState(\"\");\n   const [arraySize, setArraySize] = React.useState(0);\n   const [DATA, setData] = React.useState([]);\n   const [empty, setEmpty] = React.useState(true);\n   var index = 0;\n\n\n   function Item({ title, url }) {\n      return (\n         <View style={styles.item}>\n            <Image source={{ uri: url }} style={styles.image} />\n            <Text style={styles.title}>{title}</Text>\n         </View>\n      );\n   }\n\n   useInterval(() => {\n      // Your custom logic here\n      fetchConnections();\n   }, waitFor);\n\n   async function fetchConnections() {\n\n      await Font.loadAsync({\n         Josefin: require('../assets/fonts/JosefinSans-SemiBold.ttf'),\n      });\n\n      const res = await fetch('https://api.streetcred.id/custodian/v1/api/' + walletID + '/connections', {\n         method: 'GET',\n         headers: {\n            Authorization: 'Bearer L2JBCYw6UaWWQiRZ3U_k6JHeeIkPCiKyu5aR6gxy4P8',\n            XStreetcredSubscriptionKey: '4ed313b114eb49abbd155ad36137df51',\n            Accept: 'application/json',\n         },\n      });\n      res.json().then(res => setWallets(res)).then(setConnectionName(wallets[0].name)).then(setArraySize(wallets.length))\n      if (arraySize > currArraySize) {\n         currArraySize = arraySize;\n         for (let index = 0; index < arraySize; index++) {\n            const credentialsData = wallets[index]\n            const obj = { id: credentialsData.connectionId, title: credentialsData.name, image: credentialsData.imageUrl };\n            setData(add(DATA, obj.id, obj))\n            connectionsData = add(connectionsData, obj.id, obj)\n            ///to make the index with the connectionID\n         }\n      }\n      // //console.log(DATA);\n      if(currArraySize>0)\n         setEmpty(false)\n      else\n         setEmpty(true)\n   }\n\n   return (\n      <View style={styles.container}>\n         {\n            empty?\n            (\n               <View style={styles.welcomeContainer}> \n                  <Image\n                  source={\n                  __DEV__\n                     ? require('../assets/images/conn.jpg')\n                     : require('../assets/images/robot-prod.png')\n               }\n               style={styles.welcomeImage}/>\n               </View>\n            )\n            :\n            (\n               <SafeAreaView style={styles.container}>\n                  <FlatList\n                     data={DATA}\n                     renderItem={({ item }) => <Item title={item.title} url={item.image} />}\n                     keyExtractor={item => item.id.toString()}\n                     ItemSeparatorComponent={FlatListItemSeparator}\n                  />\n               </SafeAreaView>\n            )\n         }\n      </View>\n   );\n}\n\nfunction MyTabs() {\n   return (\n      <Tab.Navigator\n         initialRouteName=\"Credentials\"\n         tabBarOptions={{\n            activeTintColor: 'royalblue',\n            labelStyle: { fontSize: 14 },\n            style: { backgroundColor: 'white' },\n         }}\n      >\n         <Tab.Screen\n            name=\"Credentials\"\n            component={CredentialsScreen}\n            options={{ tabBarLabel: 'Credentials' }}\n         />\n         <Tab.Screen\n            name=\"Connections\"\n            component={ConnectionsScreen}\n            options={{ tabBarLabel: 'Connections' }}\n         />\n      </Tab.Navigator>\n   );\n}\n\nconst Stack = createStackNavigator();\n\nexport default function LinksScreen({ navigation }) {\n   return (\n      <MyTabs />\n      // <ScrollView style={styles.container} contentContainerStyle={styles.contentContainer}>\n      //    <OptionButton\n      //       icon=\"md-school\"\n      //       label={connectionName}\n      //       onPress={() => WebBrowser.openBrowserAsync('https://docs.expo.io')}\n      //    />\n\n      //    <OptionButton\n      //       icon=\"md-compass\"\n      //       label=\"Read the React Navigation documentation\"\n      //       onPress={() => WebBrowser.openBrowserAsync('https://reactnavigation.org')}\n      //    />\n\n      //    <OptionButton\n      //       icon=\"ios-chatboxes\"\n      //       label=\"Ask a question on the forums\"\n      //       onPress={() => WebBrowser.openBrowserAsync('https://forums.expo.io')}\n      //       isLastOption\n      //    />\n      // </ScrollView>\n   );\n}\n\n\n\nfunction OptionButton({ icon, label, onPress, isLastOption }) {\n   return (\n      <RectButton style={[styles.option, isLastOption && styles.lastOption]} onPress={onPress}>\n         <View style={{ flexDirection: 'row' }}>\n            <View style={styles.optionIconContainer}>\n               <Ionicons name={icon} size={22} color=\"rgba(0,0,0,0.35)\" />\n            </View>\n            <View style={styles.optionTextContainer}>\n               <Text style={styles.optionText}>{label}</Text>\n            </View>\n         </View>\n      </RectButton>\n   );\n}\n\nconst styles = StyleSheet.create({\n   // container: {\n   //    flex: 1,\n   //    backgroundColor: '#fafafa',\n   // },\n   container: {\n      flex: 1,\n      // marginTop: Constants.statusBarHeight,\n   },\n   contentContainer: {\n      paddingTop: 15,\n   },\n   welcomeContainer: {\n      alignItems: 'center',\n      marginTop: 10,\n      marginBottom: 20,\n    },\n    welcomeImage: {\n      width: 150,\n      height: 180,\n      resizeMode: 'contain',\n      marginTop: 100,\n      marginLeft: -10,\n    },\n   optionIconContainer: {\n      marginRight: 12,\n   },\n   option: {\n      backgroundColor: '#fdfdfd',\n      paddingHorizontal: 15,\n      paddingVertical: 15,\n      borderWidth: StyleSheet.hairlineWidth,\n      borderBottomWidth: 0,\n      borderColor: '#ededed',\n   },\n   lastOption: {\n      borderBottomWidth: StyleSheet.hairlineWidth,\n   },\n   optionText: {\n      fontSize: 15,\n      alignSelf: 'flex-start',\n      marginTop: 1,\n   },\n   item: {\n      backgroundColor: '#ff00ff00',\n      padding: 5,\n      marginVertical: 8,\n      marginHorizontal: 16,\n      flexDirection: 'row',\n      flexWrap: 'wrap',\n   },\n   title: {\n      fontSize: 20,\n      padding: 5,\n      fontFamily: \"Josefin\",\n   },\n   image: {\n      width: 50,\n      height: 50,\n      borderRadius: 50 / 2,\n      overflow: \"hidden\",\n      // borderWidth: 3,\n      // borderColor: \"black\"\n   },\n});"]},"metadata":{},"sourceType":"module"}